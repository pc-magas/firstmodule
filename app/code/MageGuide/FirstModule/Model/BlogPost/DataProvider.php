<?php

namespace MageGuide\FirstModule\Model\BlogPost;

use MageGuide\FirstModule\Model\ResourceModel\BlogPost\Collection as BlogPosts;
use Magento\Ui\DataProvider\AbstractDataProvider;

class DataProvider extends AbstractDataProvider
{
    protected $collection;
    private \Magento\Framework\App\RequestInterface $request;


    public function __construct(
        $name,
        $primaryFieldName,
        $requestFieldName,
        BlogPosts $collection,
        \Magento\Framework\App\RequestInterface $request,
        array $meta = [],
        array $data = []
    ){

        $this->request = $request;
        $this->collection = $collection;
        parent::__construct($name, $primaryFieldName, $requestFieldName, $meta, $data);
    }

    public function getRequestFieldName()
    {
        return parent::getRequestFieldName(); // TODO: Change the autogenerated stub
    }

    public function getData()
    {
        $collection = $this->getCollection();
        $items = $collection->getItems();
        $data = [];
        foreach ($items as $item){
            $data[$item->getBlogPostId()]=$item->getData();
        }

        return $data;
    }

    public function getCollection()
    {
        $blogPostId = $this->request->getParam("blog_post_id");

        if(empty($blogPostId)){
            return $this->collection;
        }


        $collection  =  $this->collection
            ->addFieldToFilter('blog_post_id',$blogPostId);
        $collection->load();

        return $collection;
    }
}
